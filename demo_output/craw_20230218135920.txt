penetration
testing
workflow
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
testing
workflow
professional
community
penetration
testing
workflow
last
february
read
minutes
you
can
use
automated
and
manual
tools
to
obtain
detailed
information
about
your
target
the
diagram
below
is
an
overview
of
the
key
stages
of
penetration
testing
note
some
of
the
tools
used
in
this
testing
workflow
are
only
available
in
burp
suite
professional
stage
map
the
target
application
you
can
use
a
combination
of
manual
and
automated
tools
to
map
the
manually
browse
the
application
in
browser
your
traffic
is
proxied
through
burp
as
you
the
proxy
history
and
target
site
map
are
by
a
live
task
also
discovers
content
that
can
be
deduced
from
for
example
from
links
and
to
manually
discover
additional
you
can
identify
any
unrequested
items
on
the
site
then
review
these
in
note
to
control
the
content
that
is
added
to
the
site
map
and
proxy
set
the
target
scope
to
focus
on
the
items
you
are
interested
you
can
then
configure
burp
to
log
only
you
can
also
automate
the
mapping
process
and
discover
additional
configure
a
scan
to
crawl
the
burp
scanner
uses
browser
to
navigate
the
which
dramatically
increases
when
using
burp
scanner
configure
login
credentials
for
a
site
to
discover
content
that
is
only
accessible
to
authenticated
use
the
content
discovery
tool
to
find
content
that
is
not
linked
from
visible
use
burp
intruder
to
enumerate
additional
subdomains
or
note
many
applications
contain
features
that
hinder
such
as
reactive
session
termination
and
use
of
you
can
use
session
handling
rules
and
macros
to
handle
these
stage
analyze
the
attack
surface
use
the
proxy
history
and
target
site
map
to
analyze
the
information
that
burp
captures
about
the
while
you
use
these
tools
you
can
quickly
view
and
edit
interesting
message
features
in
the
you
can
also
use
other
burp
tools
to
help
you
analyze
the
attack
surface
and
decide
where
to
focus
your
use
the
target
analyzer
to
analyze
how
many
static
and
dynamic
urls
the
target
application
and
how
many
parameters
each
url
this
can
help
you
to
understand
the
extent
of
the
attack
use
burp
scanner
to
scan
a
specific
interesting
burp
scanner
audits
only
this
this
can
flag
issues
stage
test
for
vulnerabilities
you
can
use
a
combination
of
burp
tools
to
detect
and
exploit
you
may
already
have
identified
a
range
of
issues
through
the
mapping
by
burp
scanner
scans
all
requests
and
responses
that
pass
through
the
burp
lists
any
issues
that
it
identifies
under
issue
activity
on
the
dashboard
you
can
also
use
burp
scanner
to
actively
audit
for
vulnerabilities
scanner
sends
additional
requests
and
analyzes
the
traffic
and
behavior
to
identify
to
investigate
the
identified
you
can
use
multiple
burp
tools
at
to
send
a
request
between
the
request
and
select
the
tool
from
the
context
some
example
strategies
are
outlined
below
for
different
types
of
vulnerabilities
the
following
are
examples
of
sql
injection
scripting
file
path
traversal
you
can
use
burp
in
various
ways
to
exploit
these
scan
the
interesting
use
burp
intruder
to
fuzz
for
error
messages
or
other
use
burp
repeater
to
manually
modify
and
reissue
the
request
actively
exploit
any
vulnerabilities
with
burp
for
use
the
recursive
grep
payload
type
to
exploit
sql
injection
logic
and
design
flaws
the
following
are
examples
of
logic
and
design
flaws
unsafe
use
of
failure
to
enforce
account
ability
to
skip
steps
in
a
you
generally
need
to
work
manually
to
exploit
these
types
of
use
burp
repeater
to
issue
the
requests
you
could
also
turn
on
proxy
interception
and
manually
change
requests
in
the
use
burp
intruder
to
exploit
the
logic
or
design
for
example
enumerate
valid
usernames
or
cycle
through
predictable
session
tokens
or
password
recovery
reissue
the
same
request
a
large
number
of
use
match
and
replace
rules
or
session
handling
rules
to
change
the
request
in
systematic
ways
and
exploit
the
access
control
vulnerabilities
to
test
for
access
control
and
privilege
escalation
vulnerabilities
you
compare
site
maps
identify
functionality
that
is
visible
to
one
user
and
not
test
whether
a
low
privileged
user
can
access
restricted
discover
where
identifiers
are
used
to
segregate
access
to
data
by
two
users
of
the
same
access
the
request
in
different
burp
browsers
to
determine
how
requests
are
handled
in
different
user
use
a
different
user
context
and
a
separate
proxy
listener
with
a
different
port
for
each
open
additional
proxy
history
windows
for
each
filter
each
window
to
show
items
received
on
a
specific
listener
each
history
window
shows
only
the
items
for
the
associated
user
switch
requests
between
to
determine
how
they
are
handled
in
the
other
user
to
do
the
request
in
the
proxy
select
request
in
browser
then
current
session
some
privilege
escalation
vulnerabilities
arise
when
the
application
passes
a
user
identifier
in
a
then
uses
that
to
identify
the
current
user
to
test
for
use
burp
intruder
to
cycle
through
identifiers
and
retrieve
interesting
data
from
the
other
vulnerabilities
burp
contains
tools
that
can
be
used
to
perform
virtually
any
task
when
probing
for
other
types
of
for
review
the
contents
of
the
target
site
map
to
identify
information
leakage
use
the
csrf
generator
to
create
a
attack
for
a
csrf
vulnerability
review
the
browser
results
and
proxy
history
to
verify
whether
the
attack
is
use
burp
sequencer
to
analyze
the
quality
of
randomness
in
a
sample
of
session
use
burp
intruder
with
the
bit
flipper
and
ecb
block
shuffler
payload
types
to
blindly
modify
the
encrypted
data
of
session
to
meaningfully
change
the
decrypted
to
carry
out
specialized
or
customized
tasks
write
your
own
custom
burp
extensions
related
content
view
our
using
burp
suite
professional
community
edition
playlist
on
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
