comparing
site
maps
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
tools
target
site
map
comparing
site
maps
professional
community
comparing
site
maps
last
february
read
minutes
you
can
use
this
function
to
compare
two
site
this
can
help
you
to
find
access
control
and
identify
areas
to
inspect
for
you
can
use
accounts
with
different
privilege
levels
to
map
the
and
compare
the
this
enables
you
to
identify
functionality
that
is
visible
to
one
user
but
not
the
you
can
use
an
account
with
high
privileges
to
map
the
and
then
the
entire
site
map
from
a
this
enables
you
to
identify
whether
access
to
privileged
functions
is
properly
you
can
use
two
different
accounts
of
the
same
type
to
map
the
and
compare
the
this
enables
you
to
identify
cases
where
identifiers
are
used
to
access
sensitive
and
determine
whether
data
is
properly
to
access
the
comparison
the
site
map
and
select
compare
site
maps
from
the
context
the
wizard
enables
you
to
the
sources
of
the
site
maps
you
want
to
how
requests
are
matched
between
the
site
how
to
perform
the
response
comparison
site
map
sources
you
need
to
select
the
sources
of
the
site
maps
that
you
want
to
use
current
site
map
use
the
site
map
in
target
professional
load
from
burp
project
file
load
from
burp
state
file
use
a
site
map
from
a
saved
burp
project
file
or
state
this
is
useful
if
you
have
already
mapped
an
application
using
accounts
with
different
privilege
either
of
the
in
a
different
session
you
can
use
all
of
the
contents
of
the
site
or
you
can
restrict
the
comparison
to
selected
or
if
you
a
site
map
in
a
different
session
please
you
need
to
create
session
handling
rules
so
that
the
requests
occur
in
the
correct
session
configure
the
rules
to
apply
to
requests
made
by
the
target
in
simple
you
may
be
able
to
use
a
rule
that
updates
requests
from
the
target
tool
with
cookies
from
cookie
jar
the
session
uses
the
browser
to
acquire
the
desired
session
context
before
the
comparison
is
in
other
you
may
need
to
create
more
complex
session
handling
rules
to
validate
the
current
session
context
and
log
in
to
learn
see
the
session
handling
help
we
recommend
that
you
exclude
any
requests
that
could
disrupt
the
session
these
include
and
user
impersonation
to
exclude
these
restrict
the
comparison
to
selected
or
request
matching
burp
compares
the
two
site
maps
and
matches
each
request
across
to
identify
any
burp
matches
requests
based
on
the
url
file
http
method
and
the
names
of
parameters
in
the
query
string
and
message
for
some
you
may
want
to
customize
how
burp
performs
the
url
file
path
you
need
to
include
this
for
each
it
identifies
that
two
requests
are
http
method
we
recommend
that
you
include
in
most
applications
use
get
and
post
requests
to
the
same
url
for
different
url
query
string
in
most
you
need
to
include
requests
with
different
url
parameters
are
normally
used
for
different
application
there
are
two
match
parameter
names
only
match
query
strings
with
the
same
parameter
names
but
different
this
is
useful
if
parameter
values
contain
or
ephemeral
deselect
this
setting
if
parameter
names
identify
the
application
function
being
for
example
ignore
these
parameters
specify
parameters
that
are
ignored
when
matching
query
request
body
we
recommend
you
include
because
requests
with
different
body
parameters
are
normally
used
for
different
application
you
can
choose
from
the
same
two
options
as
url
query
string
request
headers
prevents
requests
with
different
http
headers
after
the
first
line
from
being
in
most
you
need
to
select
this
browsers
may
modify
request
headers
for
reasons
that
have
nothing
to
do
with
enable
this
setting
if
the
application
uses
requests
with
custom
http
to
identify
the
function
of
response
comparison
burp
compares
the
responses
to
matched
to
identify
any
you
can
customize
the
response
comparison
to
suit
your
target
response
headers
include
all
or
restrict
the
comparison
to
specific
we
recommend
that
you
include
response
headers
with
values
that
reflect
the
functionality
and
such
as
form
field
values
include
all
form
field
or
restrict
the
comparison
to
specific
form
field
values
often
reflect
differences
that
can
identify
access
control
to
analyze
highlight
the
form
field
values
for
manual
modify
the
setting
to
exclude
irrelevant
repeat
the
whitespace
choose
to
ignore
variations
in
these
are
not
normally
relevant
to
access
control
mime
type
skip
comparisons
of
these
comparisons
are
computationally
the
responses
are
likely
to
contain
static
content
such
as
which
are
not
relevant
to
access
control
the
default
settings
work
well
in
most
they
are
designed
to
reduce
by
ignoring
various
common
http
headers
and
form
fields
that
have
ephemeral
and
variations
in
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
