invisible
proxying
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
tools
burp
proxy
invisible
proxying
professional
community
invisible
proxying
last
february
read
minutes
support
for
invisible
proxying
allows
clients
to
connect
directly
to
a
proxy
listener
this
is
useful
if
the
target
application
uses
a
thick
client
component
that
runs
outside
of
the
or
a
browser
plugin
that
makes
http
requests
outside
of
the
these
clients
support
http
or
provide
an
easy
way
to
configure
redirecting
inbound
requests
you
can
force
the
client
to
connect
to
modify
your
dns
resolution
to
redirect
the
relevant
and
set
up
invisible
proxy
listeners
on
the
ports
used
by
the
for
if
the
application
uses
the
domain
name
and
http
and
https
on
the
standard
add
an
entry
to
your
hosts
file
that
redirects
the
domain
name
to
your
local
to
receive
the
redirected
create
invisible
burp
proxy
listeners
on
and
the
client
then
resolves
the
domain
name
to
your
local
ip
and
sends
requests
directly
to
your
listeners
on
that
invisible
proxy
mode
easy
to
use
dns
to
redirect
client
requests
to
the
local
but
the
need
for
a
special
invisible
proxy
mode
arises
because
the
resulting
requests
will
not
be
in
the
form
that
is
expected
by
an
http
when
you
use
plain
a
request
looks
like
get
the
corresponding
request
looks
like
get
web
proxies
use
the
full
url
in
the
first
line
of
the
request
to
determine
the
destination
they
do
not
look
at
the
host
header
to
determine
the
if
you
enable
invisible
when
burp
receives
any
requests
it
parses
out
the
contents
of
the
host
it
uses
the
host
header
as
the
destination
host
for
that
if
you
use
https
with
a
clients
send
a
connect
request
that
identifies
the
destination
host
and
then
perform
tls
clients
proceed
directly
to
tls
believing
they
are
communicating
directly
with
the
destination
if
you
enable
invisible
burp
tolerates
direct
negotiation
of
tls
by
the
and
parses
out
the
contents
of
the
host
header
from
the
decrypted
redirecting
outbound
requests
in
invisible
burp
forwards
requests
to
destination
hosts
based
on
the
host
header
parsed
out
of
each
because
you
have
modified
the
hosts
file
entry
for
the
relevant
burp
resolves
the
hostname
to
the
local
listener
unless
configured
differently
it
forwards
the
request
back
to
this
creates
an
infinite
there
are
two
methods
for
resolving
this
in
some
all
the
invisibly
proxied
traffic
heads
for
a
single
the
client
only
ever
contacts
a
single
you
can
use
the
proxy
redirection
settings
to
force
the
outgoing
traffic
to
go
to
the
correct
ip
in
some
the
proxied
traffic
heads
for
multiple
you
can
use
own
hostname
resolution
settings
to
override
the
hosts
file
and
redirect
each
domain
individually
back
to
its
correct
original
ip
a
related
problem
arises
if
the
client
does
not
include
a
host
header
in
its
if
burp
processes
requests
without
this
it
cannot
determine
which
destination
host
to
forward
the
requests
there
are
two
methods
for
resolving
this
if
all
requests
should
be
forwarded
to
the
same
destination
you
can
use
the
proxy
redirection
settings
to
force
the
outgoing
traffic
to
go
to
the
correct
ip
if
different
requests
should
be
forwarded
to
different
you
need
to
use
multiple
proxy
create
a
separate
virtual
network
interface
for
each
destination
most
operating
systems
let
you
create
additional
virtual
interfaces
with
this
is
possible
in
virtualized
create
a
separate
proxy
listener
for
each
or
two
listeners
if
http
and
https
are
both
in
use
your
hosts
file
to
redirect
each
destination
hostname
to
a
different
configure
the
listener
on
each
interface
to
redirect
all
traffic
to
the
ip
address
of
the
host
whose
traffic
was
redirected
to
handling
tls
certificates
you
can
use
various
configurations
for
the
server
tls
certificates
used
by
burp
proxy
the
default
configuration
automatically
generates
a
certificate
for
each
destination
this
may
not
work
with
invisible
clients
negotiate
tls
directly
with
the
without
first
sending
a
connect
request
to
identify
the
destination
many
including
support
the
extension
in
the
client
hello
this
identifies
the
destination
host
that
the
client
wishes
to
negotiate
if
this
extension
is
burp
uses
it
to
generate
a
certificate
for
that
host
in
the
normal
if
the
extension
is
not
burp
fails
over
to
use
a
static
certificate
there
are
two
methods
to
resolve
this
if
all
https
requests
are
to
the
same
you
can
configure
the
invisible
listener
to
generate
a
certificate
with
the
specific
hostname
used
by
the
if
https
requests
are
to
different
create
an
invisible
proxy
listener
with
a
different
virtual
network
interface
for
each
destination
configure
each
listener
to
generate
a
certificate
with
the
specific
hostname
that
traffic
is
being
redirected
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
