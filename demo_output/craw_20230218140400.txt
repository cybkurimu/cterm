troubleshooting
performance
issues
in
burp
suite
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
troubleshooting
performance
issues
professional
community
troubleshooting
performance
issues
in
burp
suite
last
february
read
minutes
there
are
circumstances
in
which
burp
suite
can
run
in
this
describe
some
quick
steps
you
can
take
to
troubleshoot
performance
issues
in
burp
suite
and
increase
the
efficiency
of
your
check
the
minimum
system
requirements
all
editions
of
burp
suite
require
for
the
best
experience
with
burp
suite
professional
we
recommend
using
a
machine
with
at
least
gb
of
memory
and
cpu
if
you
are
performing
large
amounts
of
or
testing
large
or
complex
you
may
need
a
more
powerful
machine
than
identify
potential
and
network
burp
suite
places
additional
load
on
your
cpu
and
and
on
the
network
over
which
it
if
burp
scanner
is
causing
high
cpu
you
can
optimize
cpu
usage
if
your
work
with
burp
suite
is
using
all
available
you
can
optimize
memory
usage
if
your
work
is
using
all
available
network
you
can
optimize
network
usage
optimize
cpu
usage
manage
cpu
use
by
disabling
certain
features
and
configuring
scans
in
the
following
disabling
pretty
printing
wherever
http
requests
or
responses
are
displayed
in
burp
such
as
in
the
target
tab
or
in
burp
you
have
the
option
to
view
a
prettified
version
of
the
message
as
well
as
the
raw
prettifying
larger
especially
javascript
can
take
some
by
burp
suite
uses
the
pretty
view
for
all
supported
content
if
you
find
that
this
is
causing
poor
you
can
disable
this
option
so
that
the
raw
view
is
used
to
do
select
settings
ui
inspector
and
message
editor
under
the
http
message
display
uncheck
the
pretty
print
by
default
disabling
javascript
analysis
javascript
analysis
is
computationally
expensive
and
can
slow
down
the
auditing
phase
of
a
if
you
are
not
interested
in
the
javascript
running
on
your
you
can
disable
the
note
you
can
disable
javascript
analysis
by
applying
one
of
burp
configurations
audit
checks
all
except
javascript
analysis
you
can
make
your
own
custom
scan
configuration
by
following
the
steps
from
the
menu
bar
at
the
top
of
the
select
burp
configuration
library
select
a
new
scan
configuration
or
edit
an
existing
select
auditing
expand
the
issues
reported
uncheck
the
javascript
analysis
save
the
configuration
and
select
ok
configuring
your
scans
for
performance
burp
scanner
has
many
configurable
options
for
optimizing
performance
during
both
the
crawl
and
audit
applying
the
following
scan
configurations
can
help
to
improve
crawl
strategy
crawl
strategy
crawl
limit
or
audit
checks
light
audit
checks
medium
you
can
make
your
own
custom
configuration
by
following
the
steps
from
the
menu
bar
at
the
top
of
the
select
burp
configuration
library
create
a
new
scan
configuration
or
edit
an
existing
alter
the
configuration
as
described
in
the
following
two
save
the
edited
to
optimize
performance
during
in
the
crawl
optimization
select
the
faster
or
fastest
crawl
there
is
some
risk
of
losing
coverage
when
using
either
of
these
but
they
may
still
be
suitable
for
scanning
mostly
static
in
the
crawl
optimization
reduce
the
maximum
link
depth
if
the
locations
relevant
to
your
work
are
being
found
early
in
the
in
the
crawl
limits
reduce
the
maximum
crawl
time
if
you
are
finding
the
relevant
locations
early
in
the
to
optimize
performance
during
in
the
issues
reported
uncheck
the
intrusive
active
intrusive
auditing
is
computationally
and
some
intrusive
scans
rely
on
a
target
timing
so
can
take
considerable
time
to
doing
this
will
miss
vulnerabilities
that
are
detected
only
by
intrusive
unchecking
the
medium
active
option
in
the
same
area
will
speed
up
at
the
cost
of
missing
vulnerabilities
that
are
detected
by
medium
active
in
the
audit
optimization
set
audit
speed
to
fast
to
increase
performance
at
the
cost
of
unchecking
automatically
maintain
session
in
the
same
area
will
improve
but
this
should
not
be
done
unless
the
target
site
is
mostly
a
third
under
ignored
insertion
points
is
to
limit
which
insertion
points
are
audited
if
you
are
not
interested
in
looking
for
certain
vulnerability
types
or
narrowing
the
scope
of
your
scans
ensure
that
you
are
only
scanning
the
areas
of
the
target
site
that
you
are
interested
narrowing
your
scope
will
improve
the
scope
of
a
scan
from
the
detailed
scope
configuration
area
of
the
scan
scanning
a
single
protocol
if
your
target
only
supports
one
of
http
and
ensure
that
burp
scanner
only
sends
requests
using
the
supported
in
scan
details
in
the
urls
to
scan
include
the
desired
protocol
in
each
url
that
you
want
to
then
select
scan
using
my
specified
protocols
in
the
same
optimize
memory
usage
optimize
your
memory
usage
in
the
following
disabling
extensions
burp
suite
extensions
are
but
can
increase
the
load
on
your
portswigger
does
not
test
extensions
for
resource
optimization
and
some
extensions
will
impact
burp
it
is
best
to
be
cautious
about
the
extensions
you
use
and
remove
any
that
you
do
not
if
burp
suite
appears
to
be
using
an
excessive
amount
of
try
disabling
your
extensions
one
by
one
to
discover
if
any
of
them
are
causing
allocating
more
memory
to
the
java
machine
burp
suite
is
constrained
by
the
amount
of
memory
your
machine
allocates
to
if
you
launch
burp
from
the
command
you
can
use
command
line
arguments
to
allocate
more
the
procedure
is
detailed
here
using
a
project
temporary
projects
have
more
demands
on
memory
than
as
all
the
project
data
needs
to
be
stored
in
memory
rather
than
on
a
if
your
memory
use
is
switching
to
a
project
will
move
some
of
the
load
from
memory
to
a
hard
note
that
ram
is
faster
than
hard
and
possible
that
doing
this
will
introduce
especially
if
your
disks
are
slow
hard
disk
drives
rather
than
solid
state
you
may
need
to
experiment
to
see
whether
or
temporary
projects
are
faster
for
you
can
convert
a
temporary
project
to
a
project
by
going
to
the
project
menu
and
selecting
save
copy
note
due
to
the
way
our
persistence
framework
we
recommend
using
a
local
drive
for
saving
project
files
rather
than
a
network
optimize
network
usage
manage
network
issues
in
the
following
reducing
concurrent
scans
to
reduce
the
load
on
your
reduce
the
number
of
scans
running
configuring
resource
pools
burp
suite
can
overload
target
applications
by
sending
requests
faster
than
a
target
can
handle
or
will
allow
during
active
stop
requests
hanging
or
timing
out
by
reducing
the
number
of
requests
that
burp
suite
makes
at
click
on
the
cog
icon
next
to
new
live
task
to
bring
up
the
settings
create
a
new
resource
pool
or
edit
an
existing
and
reduce
the
maximum
number
of
concurrent
save
the
resource
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
