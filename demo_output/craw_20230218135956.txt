session
handling
rule
editor
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
settings
sessions
session
handling
rule
editor
professional
community
session
handling
rule
editor
last
february
read
minutes
the
session
handling
rule
editor
enables
you
to
configure
the
session
handling
rules
that
burp
to
open
the
rule
select
settings
sessions
session
handling
rules
and
then
either
select
add
to
add
a
new
or
edit
to
edit
an
existing
the
session
handling
rule
editor
has
two
details
enables
you
to
specify
the
actions
that
the
rule
performs
when
it
is
applied
to
a
scope
enables
you
to
specify
the
urls
and
parameters
that
the
rule
applies
rule
description
access
the
rule
description
setting
from
the
details
this
setting
enables
you
to
describe
what
the
rule
the
description
you
provide
appears
on
the
rule
list
of
active
rule
actions
access
the
rule
actions
setting
from
the
details
this
setting
enables
you
to
configure
the
actions
that
the
rule
each
rule
includes
one
or
more
actions
that
should
be
carried
out
when
the
rule
is
burp
performs
these
actions
in
unless
one
of
the
actions
specifies
that
no
further
actions
should
be
applied
to
the
click
add
to
add
the
following
actions
to
your
add
cookies
from
the
session
handling
cookie
jar
set
a
specific
cookie
or
parameter
value
check
whether
the
current
session
is
and
perform
conditionally
on
the
result
prompt
the
user
for
session
recovery
run
a
macro
run
a
macro
this
issues
the
current
and
then
executes
a
further
macro
invoke
a
burp
extension
set
a
specific
header
value
you
can
combine
any
of
these
actions
to
handle
virtually
any
session
handling
for
you
could
configure
a
rule
to
run
a
macro
and
update
specified
cookie
and
parameter
values
based
on
the
you
could
use
this
to
automatically
log
back
in
to
an
application
part
way
through
an
automated
scan
or
intruder
use
cookies
from
the
session
handling
cookie
jar
this
action
updates
the
request
with
cookies
from
cookie
you
can
configure
the
action
to
update
all
cookies
with
specific
or
to
only
update
certain
specific
more
information
for
more
information
on
how
cookie
jar
see
sessions
set
a
specific
cookie
or
parameter
value
this
action
sets
a
specific
value
in
a
named
parameter
or
cookie
of
the
if
the
named
parameter
or
cookie
is
not
already
present
in
the
you
can
specify
whether
it
should
be
added
a
url
a
body
a
check
session
is
valid
this
action
checks
whether
the
current
session
is
if
it
is
you
can
choose
to
perform
a
further
action
to
obtain
a
new
valid
make
requests
to
validate
session
burp
issues
one
or
more
requests
to
determine
the
validity
of
the
current
when
running
this
burp
issue
the
current
request
that
is
being
processed
by
the
run
a
if
burp
issues
the
current
request
and
the
rule
determines
that
the
session
is
then
the
system
cannot
perform
any
further
actions
on
the
current
you
can
configure
burp
to
validate
the
session
after
a
set
number
of
this
helps
you
to
avoid
making
unnecessary
requests
in
cases
where
the
application
rarely
invalidates
your
inspect
responses
to
determine
session
validity
having
made
the
configured
burp
examines
the
response
to
determine
whether
the
session
is
if
burp
ran
a
it
examines
the
response
from
the
final
request
made
by
the
to
determine
whether
the
session
is
burp
checks
whether
or
not
the
response
contains
a
specified
you
can
configure
burp
to
search
http
response
response
the
url
of
any
redirection
you
can
search
for
a
literal
string
or
a
regular
you
can
make
the
search
case
define
behavior
dependent
on
session
validity
this
setting
enables
you
to
configure
how
burp
behaves
once
the
validity
check
is
if
the
session
is
you
can
select
whether
burp
should
process
any
further
rules
or
actions
for
the
current
if
the
session
is
you
can
configure
burp
to
perform
one
of
the
following
actions
in
order
to
obtain
a
new
valid
run
a
prompt
for
session
run
a
macro
to
obtain
a
new
valid
session
if
you
select
run
a
macro
then
burp
runs
one
or
more
macros
to
attempt
to
obtain
a
new
valid
you
can
specify
the
macros
to
run
from
the
select
macro
more
information
for
information
on
recording
and
editing
see
macro
editor
once
the
macro
has
you
can
select
whether
burp
should
update
the
current
request
with
parameters
matched
from
the
final
macro
you
can
also
select
whether
burp
should
update
the
current
request
with
cookies
from
the
session
handling
cookie
burp
can
either
update
the
request
using
specific
parameters
and
or
update
using
all
parameters
and
cookies
except
those
tolerate
url
mismatch
when
matching
parameters
if
you
select
tolerate
url
mismatch
when
matching
parameters
then
burp
tolerates
mismatches
in
the
when
deriving
parameters
from
a
prior
burp
matches
the
parameter
name
and
url
inferred
from
the
response
to
the
parameter
name
and
url
in
the
subsequent
this
option
is
useful
if
the
application
employs
csrf
tokens
that
are
url
agnostic
that
tokens
that
can
be
obtained
from
one
location
in
the
application
and
reused
in
the
tolerate
url
mismatch
when
matching
parameters
option
simplifies
these
it
enables
you
to
define
a
rule
that
runs
on
any
request
containing
the
csrf
token
and
that
runs
a
single
macro
to
obtain
a
new
token
from
a
fixed
prompt
for
session
recovery
this
action
causes
burp
to
prompt
you
to
recover
a
valid
session
using
the
cookies
set
by
the
application
are
added
to
session
handling
cookie
and
can
be
updated
in
the
current
request
if
you
can
select
to
either
update
all
cookies
specific
exclusions
if
or
only
certain
specific
run
a
macro
this
action
issues
the
request
that
is
currently
being
and
then
runs
a
further
no
further
rules
or
actions
are
carried
out
on
the
macros
are
useful
if
the
request
you
are
testing
appears
within
a
and
you
need
to
step
through
the
remaining
stages
to
update
the
state
and
determine
the
effects
of
the
targeted
you
can
configure
burp
to
use
the
response
to
the
current
request
to
update
parameters
in
the
first
macro
if
this
option
is
then
burp
can
update
all
the
parameters
in
the
first
macro
request
specific
exclusions
if
or
only
specific
you
can
configure
the
action
to
pass
the
following
back
to
the
invoking
the
response
from
the
current
issued
prior
to
executing
the
the
final
response
from
the
the
latter
option
is
useful
in
cases
where
you
are
scanning
or
fuzzing
input
at
one
step
in
a
but
a
resulting
error
message
is
displayed
at
a
later
step
in
that
invoke
a
burp
extension
this
action
invokes
a
burp
extension
to
process
the
current
you
can
select
the
required
extension
from
the
note
that
you
can
only
select
those
extensions
that
have
registered
a
session
handling
action
set
a
specific
header
value
this
action
replaces
the
value
of
a
specified
header
within
a
select
the
add
if
not
present
checkbox
to
add
the
header
to
requests
in
which
it
is
not
already
tools
scope
the
tools
scope
settings
are
on
the
scope
tab
of
the
session
handling
rule
these
settings
enable
you
to
specify
the
burp
tools
that
each
rule
should
apply
burp
only
processes
rules
for
requests
made
by
url
scope
the
url
scope
settings
are
on
the
scope
tab
of
the
session
handling
rule
they
enable
you
to
specify
the
urls
that
each
rule
should
apply
you
can
select
from
the
following
all
urls
this
setting
is
useful
if
you
are
creating
a
generic
rule
to
use
cookies
from
cookie
the
suite
scope
this
setting
is
useful
if
you
are
creating
an
such
as
a
rule
to
validate
the
current
a
specific
custom
scope
this
setting
is
useful
if
you
are
creating
a
rule
affecting
a
single
more
information
for
more
details
on
setting
url
see
rules
parameter
scope
you
can
specify
that
rules
should
only
apply
to
requests
containing
specific
named
this
enables
you
to
create
a
rule
that
updates
a
certain
parameter
across
all
such
as
a
csrf
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
