macro
editor
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
settings
sessions
macros
professional
community
macro
editor
last
february
read
minutes
the
macro
editor
enables
you
to
add
and
edit
you
can
open
the
macro
editor
from
settings
sessions
macros
either
select
add
to
add
a
new
macro
in
the
or
edit
to
edit
an
existing
record
macro
macros
are
made
up
of
requests
taken
from
the
proxy
the
first
step
in
adding
a
macro
is
to
select
these
to
do
click
add
to
open
the
macro
recorder
select
the
items
you
need
from
the
proxy
history
if
you
can
use
browser
to
add
new
click
ok
to
add
the
items
to
the
macro
editor
note
you
cannot
record
new
items
using
the
browser
if
proxy
interception
is
turned
you
can
disable
interception
by
clicking
intercept
is
on
in
the
corner
of
the
macro
configure
item
the
macro
editor
displays
an
editable
list
of
items
in
the
you
can
modify
macro
items
directly
by
selecting
them
in
the
list
and
then
editing
them
in
the
request
each
macro
specifies
how
items
in
the
sequence
should
be
and
any
interdependencies
between
to
edit
this
select
the
relevant
item
in
the
list
and
click
configure
item
to
open
the
configure
macro
item
cookie
handling
you
can
whether
cookies
received
in
the
response
should
be
added
to
the
session
handling
cookie
whether
cookies
from
the
session
handling
cookie
jar
should
be
added
to
the
parameter
handling
you
can
configure
the
values
of
the
request
parameters
in
the
the
available
options
use
preset
value
the
parameter
always
takes
the
specified
derive
from
prior
response
the
parameter
takes
the
value
of
an
equivalent
parameter
from
an
earlier
the
ability
to
derive
a
request
value
from
a
previous
response
is
particularly
useful
in
some
and
in
situations
where
applications
make
aggressive
use
of
csrf
parameter
derivation
is
based
on
the
parameter
name
and
the
url
if
you
specify
that
a
value
should
be
derived
from
a
previous
burp
examines
that
response
for
instances
where
the
named
parameter
was
submitted
to
the
relevant
for
a
form
that
uses
the
given
action
url
and
contains
a
field
with
the
given
if
burp
finds
a
suitable
it
extracts
the
value
from
that
response
and
updates
it
in
the
when
you
define
a
new
burp
automatically
tries
to
find
any
relationships
of
this
kind
by
identifying
parameters
whose
values
can
be
determined
from
the
preceding
for
form
field
redirection
or
query
strings
in
you
can
override
the
automatic
analysis
if
custom
parameter
locations
in
response
automatic
parameter
matching
works
for
standard
parameter
locations
within
such
as
form
field
values
and
query
strings
in
in
some
you
may
need
to
manually
specify
the
location
within
a
response
that
contains
a
for
an
application
might
define
a
csrf
token
within
a
javascript
and
dynamically
add
this
token
to
a
to
create
a
macro
capable
of
deriving
this
you
need
to
add
a
custom
parameter
custom
parameter
locations
tell
burp
the
location
of
the
parameter
within
the
response
that
contains
the
and
the
name
used
for
that
parameter
in
subsequent
to
add
a
custom
click
add
in
the
custom
parameter
locations
in
response
section
to
display
the
define
custom
parameter
from
here
you
can
specify
the
the
parameter
name
whether
the
value
extracted
from
the
response
is
this
setting
ensures
that
burp
can
correctly
encode
the
value
when
it
is
used
in
subsequent
the
location
of
the
parameter
within
the
response
item
being
you
can
specify
this
location
using
standard
response
extraction
more
information
for
information
on
using
response
extraction
see
the
response
extraction
rules
burp
makes
the
configured
parameter
available
for
use
in
subsequent
macro
or
the
request
being
processed
by
a
session
handling
as
described
in
the
parameter
handling
section
macro
when
you
add
a
new
burp
automatically
tries
to
find
any
relationships
between
macro
items
by
identifying
parameters
whose
values
can
be
determined
from
the
preceding
you
can
repeat
this
automatic
analysis
using
the
macro
this
is
useful
if
you
have
modified
the
items
in
the
macro
test
macro
the
test
macro
feature
enables
you
to
verify
that
your
macro
configuration
works
as
burp
issues
the
macro
requests
in
sequence
and
attempts
to
derive
any
parameter
once
the
macro
has
burp
displays
the
all
requests
and
the
values
of
any
cookies
the
details
of
any
parameters
that
burp
attempted
to
derive
values
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
