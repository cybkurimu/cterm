burp
suite
message
editor
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
tools
message
editor
professional
community
burp
suite
message
editor
last
february
read
minutes
you
can
view
http
and
websocket
messages
in
various
places
throughout
burp
wherever
you
can
see
burp
provides
a
number
of
functions
to
help
you
quickly
analyze
this
drives
core
workflow
and
helps
you
to
carry
out
other
useful
in
some
of
such
as
burp
repeater
and
burp
you
can
also
edit
the
http
and
websocket
messages
and
resend
the
message
editor
primarily
consists
of
the
following
the
text
editor
which
contains
the
this
is
in
certain
the
collapsible
inspector
which
provides
quick
access
to
key
details
of
http
messages
and
websockets
and
allows
you
to
perform
some
basic
operations
without
having
to
switch
to
the
decoder
for
an
introduction
to
the
refer
to
getting
started
with
the
inspector
in
the
corner
of
the
message
there
are
three
icons
that
adjust
the
screen
you
can
choose
from
the
following
horizontal
layout
the
request
and
response
are
arranged
vertical
layout
the
request
and
response
are
stacked
one
on
top
of
the
combined
view
either
the
request
or
response
fills
the
message
editor
you
can
use
the
tabs
to
alternate
between
the
message
analysis
toolbar
at
the
top
of
each
request
or
response
is
the
message
analysis
this
provides
different
tabs
that
show
alternative
views
of
the
message
content
and
provide
some
additional
features
for
performing
common
by
the
pretty
raw
hex
and
render
tabs
are
but
you
can
remove
or
reorder
the
and
add
some
extra
ones
from
the
settings
menu
raw
tab
in
this
the
text
editor
displays
the
full
message
in
its
raw
the
text
editor
includes
various
useful
functions
including
syntax
analysis
hotkeys
and
text
search
you
can
use
the
button
to
toggle
whether
characters
are
displayed
in
some
of
such
as
burp
you
can
also
make
changes
to
requests
directly
in
the
text
you
can
access
a
wide
range
of
actions
for
both
requests
and
responses
either
from
the
actions
menu
or
by
anywhere
on
the
relevant
by
selecting
one
or
more
characters
in
a
you
can
also
work
with
specific
values
in
the
inspector
pretty
tab
in
this
you
can
access
all
the
same
functionality
as
in
the
raw
the
key
difference
is
that
the
text
pretty
printing
feature
is
this
improves
the
readability
of
and
code
in
http
messages
by
displaying
them
with
standardized
indentation
and
line
in
editable
supported
text
formats
are
dynamically
prettified
as
you
type
wherever
the
text
is
prettified
when
you
send
the
note
this
tab
is
only
available
if
the
message
contains
content
in
one
of
the
supported
formats
hex
tab
this
tab
displays
messages
in
raw
form
in
a
hexadecimal
it
shows
messages
arranged
into
lines
of
and
displays
the
hex
value
of
each
you
can
edit
messages
in
the
hex
any
values
that
you
insert
can
be
given
as
characters
or
in
hexadecimal
from
through
any
selected
bytes
appear
in
the
you
can
edit
individual
bytes
directly
in
the
inspector
or
by
values
in
the
you
can
select
rows
of
bytes
by
clicking
the
row
and
view
the
selection
in
the
the
hex
tab
is
useful
when
you
want
view
or
edit
the
code
point
for
individual
view
or
insert
insert
or
delete
individual
bytes
or
the
context
menu
for
this
tab
has
the
following
insert
this
inserts
a
single
new
byte
before
the
selected
insert
this
inserts
the
requested
number
of
new
bytes
before
the
selected
insert
this
inserts
the
specified
string
before
the
selected
delete
selected
this
deletes
the
selected
delete
selected
this
deletes
the
selected
render
tab
this
tab
applies
to
http
responses
containing
html
or
image
it
attempts
to
render
the
contents
of
the
message
body
in
the
form
it
would
appear
when
displayed
in
a
additional
tabs
you
can
also
choose
to
add
the
following
tabs
to
the
message
query
body
these
tabs
provide
the
same
functionality
as
the
widgets
in
the
inspector
for
more
see
inspector
to
add
tabs
to
the
message
click
the
settings
icon
in
the
above
the
inspector
for
more
see
inspector
and
message
editor
settings
tabs
some
burp
extensions
provide
additional
tabs
for
the
message
actions
menu
the
actions
menu
provides
quick
access
to
the
full
range
of
actions
that
are
available
for
the
current
other
ways
of
using
the
message
editor
you
can
do
the
following
things
with
the
message
toggle
whether
characters
are
displayed
as
lozenges
directly
in
the
normal
http
message
editor
to
do
press
the
button
in
the
message
editor
to
view
the
code
point
for
a
select
a
either
printing
or
in
the
http
an
entry
will
appear
in
the
inspector
that
indicates
the
decimal
and
hex
code
points
for
the
in
editable
such
as
a
request
in
burp
you
can
edit
this
value
to
overwrite
the
selected
insert
a
such
as
a
null
carriage
or
newline
by
editing
the
code
point
of
an
existing
byte
using
the
insert
a
clrf
by
placing
the
cursor
in
the
appropriate
position
in
the
request
and
press
the
enter
return
to
insert
a
place
the
cursor
in
the
desired
position
in
the
request
and
enter
an
arbitrary
placeholder
edit
its
code
point
accordingly
using
the
to
delete
a
delete
the
corresponding
character
directly
in
the
to
delete
we
recommend
using
the
button
to
display
them
note
instead
of
using
the
inspector
to
edit
code
points
for
a
some
users
may
find
it
quicker
to
a
selection
and
edit
the
relevant
hex
codes
before
decoding
the
selection
back
to
its
original
this
is
particularly
effective
if
you
use
the
corresponding
messages
in
the
message
editor
the
message
editor
displays
a
representation
of
messages
using
essentially
showing
you
what
the
equivalent
request
would
look
whenever
you
make
burp
automatically
converts
these
to
their
equivalent
behind
the
scenes
and
updates
the
underlying
in
many
cases
the
protocol
you
use
is
this
enables
you
to
use
the
message
editor
with
as
as
this
view
is
bound
by
the
limitations
of
syntax
and
requires
some
lightweight
normalization
to
ensure
that
a
valid
request
is
it
may
not
be
suitable
to
test
for
issues
that
are
exclusive
to
in
this
we
recommend
you
use
the
inspector
to
work
with
for
more
detailed
please
refer
to
the
documentation
actions
to
access
a
range
of
actions
for
a
request
or
click
the
actions
the
available
actions
depend
on
the
message
these
are
described
note
the
menu
may
also
include
additional
items
that
are
specific
to
the
tool
in
which
the
editor
for
in
repeater
the
context
menu
has
options
to
paste
a
url
as
a
request
and
add
the
current
item
to
the
site
scan
send
to
you
can
send
any
or
a
selected
portion
of
the
to
other
burp
the
ability
to
send
requests
between
tools
forms
the
core
of
workflow
show
response
in
browser
you
can
render
the
selected
response
in
to
avoid
the
limitations
of
html
renderer
when
you
select
this
burp
gives
you
a
unique
url
that
you
can
paste
into
to
render
the
the
resulting
browser
request
is
served
by
burp
with
the
exact
response
that
you
selected
request
is
not
forwarded
to
the
original
web
and
yet
the
response
is
processed
by
the
browser
in
the
context
of
the
originally
requested
this
means
that
relative
links
within
the
response
are
handled
properly
by
the
as
a
the
browser
may
make
additional
requests
in
the
course
of
rendering
the
for
images
or
for
these
are
handled
by
burp
in
the
usual
request
in
browser
you
can
the
selected
request
in
the
following
are
in
original
session
burp
issues
the
request
using
the
exact
cookie
header
that
appeared
in
the
original
in
current
browser
session
burp
issues
the
request
using
the
cookies
supplied
by
you
can
use
the
in
current
browser
session
option
to
test
access
controls
select
requests
within
burp
that
were
generated
within
one
user
an
for
log
in
with
a
different
user
an
ordinary
for
reissue
the
when
you
work
with
this
method
is
normally
a
lot
easier
than
repeating
a
process
over
and
and
modifying
cookies
manually
using
the
engagement
tools
professional
this
submenu
contains
useful
functions
to
perform
for
more
see
the
engagement
tools
change
request
method
for
you
can
automatically
switch
the
request
method
between
get
and
with
all
relevant
request
parameters
suitably
relocated
within
the
use
this
option
to
quickly
test
the
tolerance
of
parameter
for
to
bypass
input
or
a
scripting
change
body
encoding
for
you
can
switch
the
encoding
of
any
message
body
between
standard
and
copy
url
this
function
copies
the
full
current
url
to
the
copy
as
curl
command
this
function
copies
to
the
clipboard
a
curl
command
that
can
be
used
to
generate
the
current
copy
to
file
this
function
allows
you
to
select
a
file
and
copy
the
contents
of
the
current
message
to
the
this
is
handy
for
binary
when
copying
via
the
clipboard
may
cause
copying
operates
on
the
selected
text
if
nothing
is
the
whole
paste
from
file
this
function
allows
you
to
select
a
file
and
paste
the
contents
of
the
file
into
the
this
is
handy
for
binary
when
pasting
via
the
clipboard
may
cause
pasting
replaces
the
selected
text
if
nothing
is
inserts
at
the
cursor
save
item
this
function
lets
you
specify
a
file
to
save
the
selected
request
and
response
in
xml
including
all
relevant
metadata
such
as
response
http
status
code
and
mime
convert
selection
this
applies
to
the
raw
view
the
submenu
items
enable
you
to
perform
quick
encoding
or
decoding
of
the
selected
text
in
a
variety
of
if
the
message
is
then
the
conversion
is
performed
to
the
selected
if
the
message
is
not
then
the
result
of
the
conversion
is
shown
in
a
the
following
types
of
conversion
are
url
these
options
perform
url
encoding
or
you
can
optionally
encode
just
key
http
or
all
or
all
characters
using
for
html
these
options
perform
html
encoding
or
you
can
optionally
encode
just
key
html
or
all
or
all
characters
using
numeric
entities
for
or
all
characters
using
hex
entities
for
these
options
perform
encoding
or
url
these
options
perform
url
encoding
or
construct
string
these
options
generate
code
in
various
interpreted
languages
to
dynamically
construct
the
selected
it
can
be
useful
for
delivering
certain
attacks
like
sql
injection
where
it
is
necessary
to
dynamically
build
a
string
to
evade
input
the
available
options
are
and
sql
on
the
oracle
and
mysql
as
you
type
this
applies
to
the
raw
view
if
this
option
is
turned
on
then
characters
like
and
are
automatically
replaced
with
their
equivalents
as
you
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
