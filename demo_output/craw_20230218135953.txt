sessions
settings
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
settings
sessions
professional
community
sessions
settings
last
february
read
minutes
the
sessions
settings
enable
you
to
configure
burp
session
handling
you
can
configure
the
session
handling
rules
cookie
jar
macros
session
handling
overview
when
testing
web
you
may
encounter
challenges
relating
to
session
handling
and
application
for
the
application
may
terminate
the
testing
either
defensively
or
for
other
the
sessions
must
be
restored
before
you
can
send
subsequent
some
functions
may
require
changeable
tokens
within
each
request
in
order
to
hinder
request
forgery
some
functions
may
require
you
to
make
a
series
of
secondary
requests
in
order
to
get
the
application
into
a
suitable
state
to
accept
the
request
that
you
need
to
session
handling
functionality
enables
you
to
configure
the
system
to
handle
challenges
in
the
helping
you
to
continue
your
testing
session
handling
rules
session
handling
rules
give
you
control
over
how
burp
deals
with
a
session
handling
mechanism
and
related
each
rule
has
two
a
scope
denoting
the
urls
and
parameters
that
the
rule
applies
the
actions
that
are
performed
when
the
rule
is
applied
to
a
every
time
burp
makes
an
outgoing
it
determines
which
of
the
defined
rules
should
apply
to
the
request
and
then
performs
all
of
the
relevant
actions
in
note
burp
scanner
automatically
handles
sessions
during
crawling
and
burp
does
not
apply
session
handling
rules
to
requests
made
by
these
except
for
rules
that
only
contain
set
a
specific
cookie
or
parameter
value
and
or
invoke
a
burp
extension
by
creating
multiple
you
can
define
a
hierarchy
of
behavior
that
burp
applies
to
different
applications
and
for
you
could
define
the
following
rules
for
a
particular
for
all
add
cookies
from
cookie
for
requests
to
a
specific
validate
that
the
current
session
with
that
application
is
still
if
the
session
is
not
run
a
macro
to
log
back
in
to
the
and
update
the
cookie
jar
with
the
resulting
session
for
requests
to
a
specific
url
containing
the
run
a
macro
to
obtain
a
valid
value
and
use
this
value
when
making
the
more
information
for
more
details
on
configuring
session
handling
see
the
session
handling
rule
editor
session
handling
tracer
the
session
handling
tracer
can
help
you
when
troubleshooting
your
session
handling
to
view
the
click
open
sessions
tracer
the
tracer
shows
a
listing
of
every
request
that
has
been
handled
by
the
session
handling
functionality
those
requests
where
at
least
one
session
rule
has
been
for
each
request
the
tracer
shows
the
sequence
of
rules
and
actions
that
were
carried
it
also
shows
the
changes
made
to
the
current
request
at
each
step
in
the
this
information
can
help
you
to
see
whether
your
current
rule
configuration
is
achieving
the
required
note
the
session
handling
tracer
imposes
a
processing
and
storage
overhead
on
all
affected
http
we
recommend
that
you
only
use
the
tracer
when
troubleshooting
issues
with
session
handling
session
handling
rules
in
tools
session
handling
rules
interact
with
other
there
is
a
default
session
handling
rule
that
updates
requests
made
by
the
scanner
with
cookies
from
cookie
this
rule
does
not
apply
when
the
scanner
is
managing
its
own
sessions
during
crawling
and
you
can
disable
this
rule
if
if
session
handling
rules
modify
a
request
before
it
is
made
to
update
a
cookie
or
other
intruder
and
repeater
show
the
updated
requests
shown
within
reported
scanner
issues
are
displayed
as
the
original
this
enables
you
to
compare
the
modified
request
with
the
base
to
view
the
final
request
for
a
scan
as
modified
by
the
session
send
the
request
to
burp
repeater
and
issue
it
from
note
that
you
must
have
the
same
session
handling
rules
for
both
repeater
and
scanner
in
order
for
this
process
to
when
the
scanner
or
intruder
makes
a
request
that
manipulates
a
cookie
or
parameter
that
is
affected
by
a
session
handling
the
session
handling
action
is
not
applied
to
that
this
avoids
interference
with
the
test
that
is
being
for
suppose
you
are
using
intruder
to
fuzz
all
the
parameters
in
a
and
you
have
configured
a
session
handing
rule
to
update
the
sessid
cookie
in
that
in
this
the
sessid
cookie
is
updated
when
intruder
is
fuzzing
other
when
intruder
is
fuzzing
the
sessid
cookie
the
session
handling
rule
does
not
update
the
cookie
and
burp
sends
the
intruder
payload
string
as
the
sessid
the
session
handling
rules
settings
are
project
they
apply
to
the
current
project
cookie
jar
cookie
jar
stores
all
of
the
cookies
issued
by
websites
you
the
cookie
jar
is
shared
between
all
of
session
handling
rules
and
macros
can
use
the
cookie
jar
to
automatically
update
outgoing
requests
with
by
the
cookie
jar
is
updated
based
on
traffic
from
the
you
can
configure
the
cookie
jar
to
monitor
any
of
the
following
tools
to
update
in
the
case
of
the
burp
also
inspects
incoming
requests
from
the
this
is
useful
where
an
application
has
set
a
persistent
cookie
that
is
present
in
browser
that
is
required
to
handle
your
having
burp
update
its
cookie
jar
based
on
requests
through
the
proxy
means
that
all
the
necessary
cookies
are
added
to
the
cookie
jar
even
if
the
application
does
not
update
the
value
of
the
cookie
during
your
the
cookie
jar
honors
the
domain
and
path
scope
of
note
crawls
do
not
update
the
cookies
stored
in
the
cookie
managing
the
cookie
jar
to
manage
the
contents
of
the
cookie
click
open
cookie
jar
you
can
edit
cookies
remove
cookies
from
the
or
empty
the
jar
the
cookie
jar
settings
are
project
they
apply
to
the
current
project
macros
the
macros
settings
enable
you
to
create
and
manage
macros
that
burp
can
use
during
a
macro
is
a
predefined
sequence
of
one
or
more
you
can
use
macros
within
session
handling
rules
to
perform
various
such
fetching
a
page
of
the
application
as
the
home
to
check
that
the
current
session
is
still
performing
a
login
to
obtain
a
new
valid
obtaining
a
token
or
nonce
to
use
as
a
parameter
in
another
when
you
scan
or
fuzz
a
request
in
a
a
macro
can
perform
any
requests
necessary
to
get
the
application
into
a
state
where
the
targeted
request
is
in
a
a
macro
can
complete
the
remaining
steps
of
the
process
after
the
it
can
confirm
the
action
was
or
otherwise
conclude
the
as
well
as
a
sequence
of
each
macro
specifies
how
cookies
and
parameters
in
the
sequence
should
be
and
any
interdependencies
between
you
can
add
a
new
macro
by
clicking
add
to
display
the
macro
editor
you
can
also
edit
your
existing
or
change
their
position
in
the
more
information
for
more
details
on
recording
see
the
macro
editor
the
macros
settings
are
project
they
apply
to
the
current
project
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
