a
login
mechanism
using
burp
intruder
portswigger
login
products
solutions
research
academy
daily
swig
support
company
customers
about
blog
careers
legal
contact
resellers
my
account
customers
about
blog
careers
legal
contact
resellers
burp
suite
enterprise
edition
the
dynamic
web
vulnerability
burp
suite
professional
the
web
penetration
testing
burp
suite
community
edition
the
best
manual
tools
to
start
web
security
from
burp
suite
lightweight
web
application
security
scanning
for
view
all
product
editions
account
and
subscription
management
information
on
and
application
security
testing
see
how
our
software
enables
the
world
to
secure
the
devsecops
catch
critical
ship
more
secure
more
penetration
testing
accelerate
penetration
testing
find
more
more
automated
scanning
scale
dynamic
reduce
save
bug
bounty
hunting
level
up
your
hacking
and
earn
more
bug
compliance
enhance
security
monitoring
to
comply
with
view
all
solutions
product
comparison
the
difference
between
pro
and
enterprise
support
center
get
help
and
advice
from
our
experts
on
all
things
documentation
tutorials
and
guides
for
burp
get
started
professional
get
started
with
burp
suite
get
started
enterprise
get
started
with
burp
suite
enterprise
user
forum
get
your
questions
answered
in
the
user
downloads
download
the
latest
version
of
burp
visit
the
support
center
downloads
download
the
latest
version
of
burp
product
support
and
documentation
support
center
getting
started
edition
enterprise
edition
latest
releases
burp
extensions
installing
extensions
bapp
store
creating
extensions
user
forum
training
search
professional
and
community
edition
professional
and
community
edition
getting
started
step
download
and
install
step
intercepting
http
traffic
step
modifying
requests
step
setting
the
target
scope
step
reissuing
requests
step
running
your
first
scan
step
generating
a
report
step
what
testing
workflow
tools
browser
proxy
overview
getting
started
with
burp
proxy
proxy
intercept
http
history
overview
filtering
http
history
websockets
history
overview
filtering
websockets
history
settings
managing
ca
certificates
invisible
proxying
repeater
overview
getting
started
working
with
http
messages
overview
sending
requests
in
sequence
working
with
websocket
messages
tabs
managing
tabs
managing
tab
groups
settings
overview
settings
intruder
overview
getting
started
configuring
attacks
overview
payload
positions
attack
types
payload
types
overview
payload
lists
payload
processing
resource
pools
attack
settings
managing
tabs
attack
results
overview
editing
attacks
saving
attacks
viewing
results
analyzing
results
testing
workflow
typical
uses
overview
enumerating
identifiers
fuzzing
harvesting
data
enumerating
subdomains
logins
target
overview
site
map
overview
getting
started
workflow
tools
filter
comparing
site
maps
comparison
results
editing
the
layout
scope
overview
setting
the
target
scope
url
matching
issue
definitions
manual
application
mapping
reviewing
unrequested
items
analyzing
the
attack
surface
inspector
overview
getting
started
modifying
requests
settings
message
editor
overview
text
editor
settings
scanner
collaborator
overview
getting
started
settings
logger
overview
getting
started
working
with
logger
entries
settings
task
logger
viewing
requests
sent
by
burp
extensions
sequencer
overview
getting
started
obtaining
a
token
sample
overview
live
capture
settings
results
overview
tests
dom
invader
overview
enabling
dom
invader
testing
for
dom
xss
testing
with
web
messages
testing
for
prototype
pollution
testing
for
dom
clobbering
settings
overview
main
settings
attack
types
web
message
settings
prototype
pollution
settings
misc
settings
canary
settings
clickbandit
comparer
decoder
engagement
tools
overview
target
analyzer
content
discovery
generate
csrf
poc
manual
testing
simulator
infiltrator
search
tutorials
intercepting
http
requests
and
responses
augmenting
manual
testing
using
burp
scanner
resending
individual
requests
with
burp
repeater
scanning
a
website
for
vulnerabilities
using
live
tasks
in
burp
suite
using
burp
suite
projects
touring
the
burp
suite
user
interface
using
burp
interception
rules
using
target
scope
in
burp
suite
testing
websockets
with
burp
suite
reducing
noise
during
manual
testing
brute
forcing
a
login
with
burp
intruder
enumerating
subdomains
with
burp
intruder
viewing
requests
sent
by
burp
extensions
using
logger
testing
for
reflected
xss
using
burp
repeater
spoofing
your
ip
address
using
burp
proxy
match
and
replace
credential
stuffing
using
burp
intruder
burp
extensions
overview
installing
extensions
managing
extensions
monitoring
system
impact
creating
extensions
getting
started
for
the
bapp
store
acceptance
criteria
submitting
an
extension
montoya
api
javadoc
github
examples
extender
api
javadoc
examples
reporting
scan
results
overview
generating
a
report
report
settings
project
files
overview
creating
project
files
managing
project
files
settings
settings
overview
key
settings
tool
settings
proxy
intruder
repeater
sequencer
browser
project
settings
scope
collaborator
tasks
automatic
backup
logging
session
settings
sessions
session
handling
rule
editor
macro
editor
network
settings
connections
tls
http
user
interface
settings
inspector
and
message
editor
hotkeys
display
suite
settings
rest
api
updates
performance
feedback
temporary
files
location
extensions
configuration
library
response
extraction
rules
testing
mobile
applications
overview
configuring
an
ios
device
configuring
an
android
device
troubleshooting
testing
with
overview
basics
in
the
message
editor
performing
exclusive
attacks
training
troubleshooting
support
center
documentation
desktop
editions
tutorials
a
login
with
burp
intruder
professional
a
login
mechanism
using
burp
intruder
last
february
read
minutes
burp
intruder
supports
various
attack
types
a
task
is
achievable
with
more
than
one
type
of
if
you
choose
the
right
it
can
save
you
a
great
deal
of
effort
when
you
carry
out
manual
security
this
tutorial
shows
you
how
to
use
a
cluster
bomb
attack
type
to
username
and
password
fields
note
the
cluster
bomb
attack
type
may
not
be
suitable
for
users
of
burp
suite
community
edition
which
lacks
the
full
speed
version
of
burp
intruder
found
in
burp
suite
professional
what
is
a
cluster
bomb
the
cluster
bomb
attack
type
assigns
a
different
payload
set
to
each
defined
payload
it
places
payloads
from
each
set
in
it
is
useful
for
testing
every
possible
permutation
when
an
attack
requires
multiple
different
input
values
to
be
inserted
in
multiple
when
you
use
a
cluster
bomb
the
number
of
requests
generated
increases
exponentially
with
the
number
of
payloads
this
means
that
this
attack
type
is
mainly
used
to
iterate
through
relatively
small
data
in
this
tutorial
for
a
list
of
usernames
and
passwords
generates
a
request
attack
a
login
using
a
cluster
bomb
attack
while
the
following
original
solution
suggests
you
use
two
separate
sniper
attacks
to
solve
the
in
this
example
we
will
solve
it
with
a
single
cluster
bomb
the
cluster
bomb
multiple
payload
sets
enable
you
to
test
the
username
and
password
fields
a
cluster
bomb
attack
is
less
efficient
than
two
sniper
as
it
results
in
more
requests
being
unlike
the
sniper
the
cluster
bomb
method
does
not
require
you
to
enumerate
valid
note
browser
is
an
easy
way
to
proxy
http
traffic
even
over
the
encrypted
https
there
is
no
setup
required
simply
go
to
the
proxy
click
open
browser
and
ensure
intercept
is
off
step
open
the
lab
open
and
use
it
to
access
the
following
click
access
the
lab
and
log
in
to
your
portswigger
account
if
step
intercept
a
login
request
in
the
click
the
my
account
link
to
open
the
login
enter
some
sample
data
into
the
username
and
password
fields
to
help
you
identify
them
click
the
log
in
in
burp
go
to
the
proxy
and
click
the
http
history
sub
now
you
can
see
a
list
of
the
http
requests
made
by
browser
since
you
opened
burp
find
a
request
made
with
the
method
post
for
the
url
and
click
step
forward
your
intercepted
request
to
intruder
right
click
on
the
request
you
just
and
click
send
to
intruder
click
the
intruder
note
that
the
request
has
been
sent
to
burp
intruder
and
now
has
payload
positions
by
inserted
at
three
step
configure
payload
positions
to
solve
the
we
only
require
payload
positions
for
the
username
and
click
clear
to
clear
all
select
the
input
data
in
the
username
and
click
add
to
mark
it
as
a
payload
repeat
this
for
the
input
data
in
the
password
so
that
both
fields
are
step
configure
and
launch
a
cluster
bomb
attack
from
the
choose
an
attack
type
drop
select
cluster
bomb
click
the
payloads
note
that
payload
set
is
set
to
and
payload
type
is
set
to
simple
list
under
payload
settings
paste
the
list
of
candidate
usernames
into
the
change
the
payload
set
to
under
payload
settings
paste
the
list
of
candidate
passwords
into
the
note
that
request
count
has
increased
to
click
start
attack
note
payload
set
defines
the
position
into
which
a
payload
set
is
for
if
you
have
defined
two
payload
positions
within
the
request
then
payload
set
is
inserted
into
the
and
payload
set
into
the
observe
that
intruder
creates
requests
combining
each
entry
in
payload
set
with
the
first
entry
in
payload
set
before
moving
onto
the
next
item
in
payload
set
and
repeating
the
it
does
this
until
it
reaches
the
end
of
payload
set
step
analyze
attack
results
to
determine
the
correct
username
and
password
wait
for
your
attack
to
finish
running
this
may
take
a
few
especially
if
you
are
using
the
throttled
version
of
burp
intruder
that
comes
with
burp
suite
community
click
the
header
of
the
status
column
to
sort
the
list
of
responses
by
http
status
note
that
you
may
need
to
click
this
more
than
observe
that
where
most
requests
have
a
status
one
request
has
a
code
of
make
a
note
of
the
username
and
password
used
in
this
request
they
are
the
correct
login
details
to
solve
the
note
that
this
is
unlikely
to
be
the
same
combination
shown
in
the
screenshot
in
the
proxy
ensure
that
intercept
is
off
in
return
to
the
login
and
input
the
username
and
password
you
previously
noted
for
the
request
with
the
status
click
log
in
this
will
solve
the
summary
and
next
steps
congratulations
now
you
know
how
to
configure
a
cluster
bomb
attack
in
burp
intruder
to
a
simple
login
form
more
in
web
applications
often
have
robust
countermeasures
in
place
to
thwart
if
you
want
to
learn
how
to
bypass
some
of
then
check
out
the
authentication
topic
in
the
web
security
academy
was
this
article
not
really
an
error
please
try
burp
suite
web
vulnerability
scanner
burp
suite
editions
release
notes
vulnerabilities
scripting
sql
injection
request
forgery
xml
external
entity
injection
directory
traversal
request
forgery
customers
organizations
testers
developers
company
about
portswigger
news
careers
contact
legal
privacy
notice
insights
web
security
academy
blog
research
the
daily
swig
follow
us
portswigger
